#!/usr/bin/env python3

# Script that takes an output file and gets the last geometry
import sys
import argparse
import importlib

sys.path.insert(0, '../')

from qgrep.bagel import convert_to_bagel_geom
from qgrep.helper import read

parser = argparse.ArgumentParser(description='Get the geometry from an output file.')
parser.add_argument('-i', '--input', help='The file to be read.', type=str,
                    default='output.dat')
parser.add_argument('-o', '--output', help='Where to output the geometry.',
                    type=str, default='geom.xyz')
parser.add_argument('-u', '--units', help='What units to output the geometry in.',
                    type=str, default='angstrom')

args = parser.parse_args()

lines, program = read(args.input)

xyz_form = '{:<2} {: >10.6f} {: >10.6f} {: >10.6f}\n'
if program:
    try:
        mod = importlib.import_module('qgrep.' + program)
        if hasattr(mod, 'get_geom'):
            geom_str = ''.join(mod.get_geom(lines, 'xyz', args.units))
            out = convert_to_bagel_geom(geom_str)
            open(args.output, 'w').write(out)
        else:
            print(program + ' does not yet have get_geom implemented.')
    except ImportError:
        print(program + ' is not yet supported.')
else:
    print('Cannot determine what program made this output file.')

