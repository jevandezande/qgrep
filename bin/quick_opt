#!/usr/bin/env python3

# Script that starts a quick optimization from the provided geometry
import os
import re
import argparse

from sq import SubmitJob

from cclib import ccopen

parser = argparse.ArgumentParser(description='Update the geometry fo the input file.')
parser.add_argument('-i', '--input', help='The file from which to get the geometry.',
                    type=str, default='output.dat')
parser.add_argument('-m', '--method', help='The method to use',
                    type=str, default='HF-3C')
parser.add_argument('-d', '--debug', help="Generate but don't submit the optimization.",
                action='store_true', default=False)

args = parser.parse_args()

method = ' '.join(args.method.split('/'))
name = '_'.join(args.method.split('/'))

charge = 0
multiplicity = 1
if args.input.split('.')[-1] == 'xyz':
    with open(args.input) as f:
        next(f), next(f)
        val_form = '    {:<2}' + '  {:> 10.7f}'*3 + '\n'
        geom = ''
        for line in f:
            atom, x, y, z, *other = line.split()
            geom += val_form.format(atom, float(x), float(y), float(z))
    geom = geom[:-1]
else:
    data = ccopen(args.input).parse()
    # Strip the number of atoms and comment lines
    geom = '    ' + '\n    '.join(data.writexyz().splitlines()[2:])
    charge = data.charge
    multiplicity = data.mult


input_file = f"""%pal nprocs 8 end

! Opt {method}

* xyz {charge} {multiplicity}
{geom}
*
"""

os.makedirs(args.method, exist_ok=True)
with open(f'{name}/input.dat', 'w') as f:
    f.write(input_file)

cwd = os.getcwd()
os.chdir(name)
job = SubmitJob({'debug': args.debug})
job.submit()
os.chdir(cwd)
