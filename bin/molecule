#!/usr/bin/env python3

# Script that takes an output file and gets the last geometry
import sys
import argparse

sys.path.insert(0, '../')

from qgrep.helper import read
from qgrep.molecule import Molecule

parser = argparse.ArgumentParser(description='Generate a formatted molecule from an output file.')
parser.add_argument('-i', '--input', help='The file to be read.',
                    type=str, default='output.dat')
parser.add_argument('-o', '--output', help='Where to output the geometry.',
                    type=str, default='geom.xyz')
parser.add_argument('-s', '--style', help='The geometry style',
                    type=str, default='xyz')
parser.add_argument('-u', '--units', help='What units to output the geometry in.',
                    type=str, default='angstrom')
parser.add_argument('-l', '--length', help='Output the geometry at the beginning (making it a true .xyz file)',
                    action='store_true', default=False)

args = parser.parse_args()

lines, program = read(args.input)

mol = Molecule.read_from(args.input)
mol.write(args.output, style=args.style)
