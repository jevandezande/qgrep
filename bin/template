#!/usr/bin/env python3

# Script that makes an input file with the specified parameters
import sys
import argparse
import importlib

sys.path.insert(0, '../')

parser = argparse.ArgumentParser(description='Make an input file with the specified parameters.')
parser.add_argument('-p', '--program', help='The program',
                    type=str, default='orca')
parser.add_argument('-g', '--geom', help='The geometry file',
                    type=str, default='geom.xyz')
parser.add_argument('-j', '--jobtype', help='The jobtype to run',
                    type=str, default='opt')
parser.add_argument('-f', '--functional', help='The functional to use',
                    type=str, default='B3LYP')
parser.add_argument('-b', '--basis', help='The basis set to use',
                    type=str, default='def2-svp')

args = parser.parse_args()

geom = ''
try:
    with open(args.geom, 'r') as f:
        geom = f.read().strip()
except IOError:
    print('No geometry specified')

program = args.program
if program:
    try:
        mod = importlib.import_module(f'qgrep.{program}')
        if hasattr(mod, 'template'):
            temp = mod.template(geom, args.jobtype, args.functional, args.basis)
            input_file = 'input.dat'
            if args.program == 'bagel':
                input_file = 'input.json'
            with open(input_file, 'w') as f:
                f.write(temp)
        else:
            print(f'{program} does not yet have template implemented.')
    except ImportError:
        print(f'{program} is not yet supported.')
else:
    print('Cannot determine what program made this output file.')

