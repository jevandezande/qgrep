#!/usr/bin/env python3

# Script that takes an output file and returns the orbital energies

import argparse
import numpy as np
from cclib import ccopen


parser = argparse.ArgumentParser(description='Get orbital energies of an output file.')
parser.add_argument('-i', '--input', help='The file to be read.', type=str,
                    default='output.dat')
parser.add_argument('-w', '--write', help='Write energy levels to an output file.',
                    default=False, action='store_true')
parser.add_argument('-o', '--output', help='File for the orbital energies',
                    type=str, default='energies.dat')

args = parser.parse_args()

try:
    data = ccopen(args.input).parse()
    levels = np.array(data.moenergies)
    homos = data.homos
except AttributeError as e:
    raise Exception('Cannot find appropriate data, has the SCF finished yet?')

if levels.shape[0] == 1:
    i = homos[0]
    homo = levels[0][i]
    lumo = levels[0][i+1]

    out = """\
  eV  │ Index │   Energy  │
──────┼───────┼───────────┤
 LUMO │  {:>3}  │ {:>9.5f} │
 HOMO │  {:>3}  │ {:>9.5f} │
──────┼───────┼───────────┤
 GAP  │       │ {:>9.5f} │
""".format(i, lumo, i, homo, homo-lumo)
else:
    ia, ib = homos[0], homos[1]
    ha, hb = levels[0][ia],   levels[1][ib]
    la, lb = levels[0][ia+1], levels[1][ib+1]
    spin_flip = min(la - hb, lb - ha)

    out = """\
  eV   │  α   β  │  α Energy  β Energy │
───────┼─────────┼─────────────────────┤
 LUMOS │ {:>3} {:>3} │ {:>9.5f} {:>9.5f} │
 HOMOS │ {:>3} {:>3} │ {:>9.5f} {:>9.5f} │    Spin-Flip Gap
───────┼─────────┼─────────────────────┤    ─────────────
 GAPS  │         │ {:>9.5f} {:>9.5f} │       {:^8.5f}
""".format(ia,   ib,   la, lb,
           ia+1, ib+1, ha, hb,
           ha-la, hb-lb, spin_flip)
print(out)


if args.write:
    levels = levels.T
    np.savetxt(args.output, levels, fmt="%7.5f")
