#!/usr/bin/env python3

# Script that takes an output file and prints its geometry convergence results

import argparse
from collections import OrderedDict
from cclib import ccopen
import os, sys
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
from qgrep.convergence import Convergence, Step


parser = argparse.ArgumentParser(description='Get the geometry of an output file.')
parser.add_argument('-i', '--input', help='The file to be read.', type=str,
                    default='output.dat')
parser.add_argument('-p', '--plot', help='Plot the convergence.',
                    action='store_true', default=False)

args = parser.parse_args()

try:
    data = ccopen(args.input).parse()
except AttributeError as e:
    print("No such data available, has the program not run that yet?")
    sys.exit()

package = data.metadata['package']
steps = []
try:
    for vals in data.geovalues:
        if package == 'ORCA':
            params = OrderedDict((('delta_e', vals[0]), ('rms_grad', vals[1]), ('max_grad', vals[2]), ('rms_step', vals[3]), ('max_step', vals[4])))
            steps.append(Step(params))
        else:
            raise NotImplementedError('Only ORCA check_convergence has been implemented so far.')
except AttributeError as e:
    print("No such data available, has the program not run that yet?")
    sys.exit()

conv = Convergence(steps, data.geotargets)
print(conv)

if args.plot:
    conv.plot()
