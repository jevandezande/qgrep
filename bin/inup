#!/usr/bin/env python3

# Script that takes the last geometry of an outputfile and pastes it in the inputfile
import argparse
import re

from cclib import ccopen

parser = argparse.ArgumentParser(description='Update the geometry fo the input file.')
parser.add_argument('-i', '--input', help='The file from which to get the geometry.',
                    type=str, default='output.dat')
parser.add_argument('-o', '--output', help='Which input file to update.',
                    type=str, default='input.dat')

args = parser.parse_args()

if args.input.split('.')[-1] == 'xyz':
    with open(args.input) as f:
        next(f), next(f)
        val_form = '    {:<2}' + '  {:> 10.7f}'*3 + '\n'
        geom = ''
        for line in f:
            atom, x, y, z, *other = line.split()
            geom += val_form.format(atom, float(x), float(y), float(z))
    geom = geom[:-1]
else:
    data = ccopen(args.input).parse()
    # Strip the number of atoms and comment lines
    geom = '    ' + '\n    '.join(data.writexyz().splitlines()[2:])

with open(args.output) as f:
    input_file = f.read()

regex = r'\*\s*(xyz|int|gzmt)\s+(-?\d+)\s+(\d+)\n(.*?)\*'
match = re.search(regex, input_file, flags=re.DOTALL)
style, charge, multiplicity, xyz = match.groups()

orig_len, new_len = xyz.count('\n'), geom.count('\n') + 1
if orig_len != new_len:
    print(f'Different number of atoms: {orig_len} != {new_len}')
if style != 'xyz':
    print(f'Changing to xyz from {style}')

swap = f'''* xyz {charge} {multiplicity}
{geom}
*'''
input_file = re.sub(regex, swap, input_file, flags=re.DOTALL)

with open(args.output, 'w') as f:
    f.write(input_file)
